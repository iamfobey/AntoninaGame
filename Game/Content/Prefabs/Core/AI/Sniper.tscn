[gd_scene load_steps=53 format=3 uid="uid://dxd6ay5l7a6ew"]

[ext_resource type="Script" uid="uid://ct3jqxqxfd2c4" path="res://Game/Code/Logic/AI/Attacker/Sniper/Character.cs" id="1_liq5q"]
[ext_resource type="SpriteFrames" uid="uid://dhca3bgkcu3q4" path="res://Game/Content/Resources/Animation/AI/Sniper.tres" id="2_ff0ex"]
[ext_resource type="Texture2D" uid="uid://brj52xahccmx2" path="res://Game/Content/Assets/Textures/Characters/Misc/Shadow.png" id="2_liq5q"]
[ext_resource type="Script" uid="uid://b5ax6uk6p6yg4" path="res://Game/Code/Core/FSM/FSM.cs" id="3_o4tih"]
[ext_resource type="Script" uid="uid://brd3uhsdvgo2c" path="res://Game/Code/Utils/AttackBody.cs" id="4_4u3ef"]
[ext_resource type="Script" uid="uid://cw1jybl1ky038" path="res://Game/Code/Logic/AI/Attacker/Sniper/FSM/AttackState.cs" id="4_23e6g"]
[ext_resource type="PackedScene" uid="uid://6iq14en6fkoe" path="res://Game/Content/Prefabs/Misc/LaserProjectile.tscn" id="5_x64ik"]
[ext_resource type="Script" uid="uid://b565li1wmngv0" path="res://Game/Code/Logic/AI/Attacker/Sniper/FSM/IdleState.cs" id="6_shlsv"]
[ext_resource type="Script" uid="uid://bmdqp6ehy2ed4" path="res://Game/Code/Logic/AI/Attacker/Sniper/FSM/RunState.cs" id="7_1v0w7"]
[ext_resource type="Script" uid="uid://bj52rnwv2eqwm" path="res://Game/Code/Logic/AI/Attacker/Sniper/FSM/WalkState.cs" id="9_onvok"]
[ext_resource type="Script" uid="uid://dsh8aw5whuisj" path="res://Game/Code/Logic/Components/HealthComponent.cs" id="10_3h5gv"]
[ext_resource type="Script" uid="uid://woks1icbeguk" path="res://Game/Code/Logic/Components/StaminaComponent.cs" id="11_wr6qg"]
[ext_resource type="Script" uid="uid://cf0mbxuqlgyrr" path="res://Game/Code/Logic/Components/PoisonedComponent.cs" id="14_x64ik"]
[ext_resource type="Script" uid="uid://bt3qhbeqkkbff" path="res://Game/Code/Logic/Components/MoveComponent.cs" id="15_x64ik"]
[ext_resource type="Script" uid="uid://ck5quhhv8vaq8" path="res://Game/Code/Logic/Components/DamageEffectComponent.cs" id="17_3busw"]
[ext_resource type="Texture2D" uid="uid://ipukwvw302gb" path="res://Game/Content/Assets/Textures/VFX/Punch.png" id="18_2iuk7"]

[sub_resource type="Animation" id="Animation_nyitk"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Attack_Backward"]
}

[sub_resource type="Animation" id="Animation_mplyy"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Attack_Forward"]
}

[sub_resource type="Animation" id="Animation_tb3uw"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Attack_Left"]
}

[sub_resource type="Animation" id="Animation_genqk"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Attack_Right"]
}

[sub_resource type="Animation" id="Animation_vqr0h"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Idle_Backward"]
}

[sub_resource type="Animation" id="Animation_8fgir"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Idle_Forward"]
}

[sub_resource type="Animation" id="Animation_rjafk"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Idle_Left"]
}

[sub_resource type="Animation" id="Animation_tqnhv"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Idle_Right"]
}

[sub_resource type="Animation" id="Animation_bq8nh"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Run_Backward"]
}

[sub_resource type="Animation" id="Animation_5k2b4"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Run_Forward"]
}

[sub_resource type="Animation" id="Animation_quqpx"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Run_Left"]
}

[sub_resource type="Animation" id="Animation_joh0h"]
length = 0.0333333
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": ["Run_Right"]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cexvk"]
_data = {
&"Attack_Backward": SubResource("Animation_nyitk"),
&"Attack_Forward": SubResource("Animation_mplyy"),
&"Attack_Left": SubResource("Animation_tb3uw"),
&"Attack_Right": SubResource("Animation_genqk"),
&"Idle_Backward": SubResource("Animation_vqr0h"),
&"Idle_Forward": SubResource("Animation_8fgir"),
&"Idle_Left": SubResource("Animation_rjafk"),
&"Idle_Right": SubResource("Animation_tqnhv"),
&"Run_Backward": SubResource("Animation_bq8nh"),
&"Run_Forward": SubResource("Animation_5k2b4"),
&"Run_Left": SubResource("Animation_quqpx"),
&"Run_Right": SubResource("Animation_joh0h")
}

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3busw"]
animation = &"Attack_Forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_2iuk7"]
animation = &"Attack_Backward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_o71oh"]
animation = &"Attack_Right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_digis"]
animation = &"Attack_Left"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_ngnjm"]
blend_point_0/node = SubResource("AnimationNodeAnimation_3busw")
blend_point_0/pos = Vector2(0, 1)
blend_point_1/node = SubResource("AnimationNodeAnimation_2iuk7")
blend_point_1/pos = Vector2(0, -1)
blend_point_2/node = SubResource("AnimationNodeAnimation_o71oh")
blend_point_2/pos = Vector2(1, 0)
blend_point_3/node = SubResource("AnimationNodeAnimation_digis")
blend_point_3/pos = Vector2(-1, 0)
blend_mode = 1

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vhxeo"]
animation = &"Idle_Forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_84al6"]
animation = &"Idle_Backward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_fthbb"]
animation = &"Idle_Right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_12g3s"]
animation = &"Idle_Left"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_lp3vh"]
blend_point_0/node = SubResource("AnimationNodeAnimation_vhxeo")
blend_point_0/pos = Vector2(0, 1)
blend_point_1/node = SubResource("AnimationNodeAnimation_84al6")
blend_point_1/pos = Vector2(0, -1)
blend_point_2/node = SubResource("AnimationNodeAnimation_fthbb")
blend_point_2/pos = Vector2(1, 0)
blend_point_3/node = SubResource("AnimationNodeAnimation_12g3s")
blend_point_3/pos = Vector2(-1, 0)
blend_mode = 1

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_8ww5c"]
animation = &"Run_Forward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_33gyn"]
animation = &"Run_Backward"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_gwf85"]
animation = &"Run_Right"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d7sma"]
animation = &"Run_Left"

[sub_resource type="AnimationNodeBlendSpace2D" id="AnimationNodeBlendSpace2D_qb7vt"]
blend_point_0/node = SubResource("AnimationNodeAnimation_8ww5c")
blend_point_0/pos = Vector2(0, 1)
blend_point_1/node = SubResource("AnimationNodeAnimation_33gyn")
blend_point_1/pos = Vector2(0, -1)
blend_point_2/node = SubResource("AnimationNodeAnimation_gwf85")
blend_point_2/pos = Vector2(1, 0)
blend_point_3/node = SubResource("AnimationNodeAnimation_d7sma")
blend_point_3/pos = Vector2(-1, 0)
blend_mode = 1

[sub_resource type="AnimationNodeTransition" id="AnimationNodeTransition_wekb7"]
input_0/name = "Idle"
input_0/auto_advance = false
input_0/break_loop_at_end = false
input_0/reset = true
input_1/name = "Run"
input_1/auto_advance = false
input_1/break_loop_at_end = false
input_1/reset = true
input_2/name = "Attack"
input_2/auto_advance = false
input_2/break_loop_at_end = false
input_2/reset = true

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_v1d6s"]
graph_offset = Vector2(-834.628, 401.562)
nodes/AttackBlendSpace2D/node = SubResource("AnimationNodeBlendSpace2D_ngnjm")
nodes/AttackBlendSpace2D/position = Vector2(-380, 800)
nodes/IdleBlendSpace2D/node = SubResource("AnimationNodeBlendSpace2D_lp3vh")
nodes/IdleBlendSpace2D/position = Vector2(-380, 400)
nodes/RunBlendSpace2D/node = SubResource("AnimationNodeBlendSpace2D_qb7vt")
nodes/RunBlendSpace2D/position = Vector2(-380, 600)
nodes/Transition/node = SubResource("AnimationNodeTransition_wekb7")
nodes/Transition/position = Vector2(-40, 540)
nodes/output/position = Vector2(200, 540)
node_connections = [&"Transition", 0, &"IdleBlendSpace2D", &"Transition", 1, &"RunBlendSpace2D", &"Transition", 2, &"AttackBlendSpace2D", &"output", 0, &"Transition"]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_pjytc"]
radius = 28.0
height = 168.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_s727y"]
size = Vector2(228, 537)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_qd8sp"]
border_width_left = 200
border_color = Color(0.984314, 0, 0.160784, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_1inls"]
bg_color = Color(0.776471, 0, 0.117647, 1)

[sub_resource type="Shader" id="Shader_ajna5"]
code = "shader_type canvas_item;
render_mode blend_mix; // Remove this if you want to use HDR glow instead (use \"Glow\" and \"Outline Glow\" sliders)

uniform int beams = 2; // How many beams the energy field should have

uniform float energy = 3.0; // How much the beams will travel up and down
uniform int roughness : hint_range(1, 10) = 3; // How compact the noise texture will be
uniform int frequency = 10; // Amount of \"ripples\" in the beams

uniform float speed = 1.0; // Animation speed
uniform float thickness : hint_range(0.0, 0.1) = 0.006; // Thickness of the main beam
uniform float outline_thickness : hint_range(0.0, 0.1) = 0.03; //Thickness of the outline color
uniform float beam_difference : hint_range(0.0, 1.0) = 0.0; // The thickness difference between the main beam and the other, if there are more than one beam. The closer to 1 the smaller the thickness difference.

uniform float glow : hint_range(0.0, 3.0) = 0.0; // Use together with WorldEnvironment's Glow feature
uniform float outline_glow : hint_range(0.0, 3.0) = 0.0;

uniform vec4 color : source_color;
uniform vec4 outline_color : source_color;

uniform float progress : hint_range(0.0, 1.0) = 1.0;

uniform float y_offset : hint_range (-0.5, 0.5) = 0.0; // Position of the beam
uniform float fixed_edge_size : hint_range(0.0, 0.5) = 0.05; // How close to the edge should the beam be still before the animation starts
uniform vec2 noise_scale = vec2(1.0); // If the object (for example the ColorRect or Sprite node) is compressed use this to compensate for the noise texture being compressed.

// New uniform to control the size of the beam
uniform float beam_size : hint_range(0.1, 10.0) = 1.0; // Scale factor for beam size

// New uniform to control the outline size
uniform float outline_size : hint_range(0.1, 10.0) = 1.0; // Scale factor for outline size

float random(vec2 uv) {
    return fract(sin(dot(uv.xy,
        vec2(12.9898,78.233))) *
            43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    // Four corners in 2D of a tile
    float a = random(uv_index);
    float b = random(uv_index + vec2(1.0, 0.0));
    float c = random(uv_index + vec2(0.0, 1.0));
    float d = random(uv_index + vec2(1.0, 1.0));

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix(a, b, blur.x) +
            (c - a) * blur.y * (1.0 - blur.x) +
            (d - b) * blur.x * blur.y;
}

float fbm(vec2 uv, float time) {
    int octaves = roughness;
    float amp = 0.01 * energy * progress;
    float freq = float(frequency);
    float value = 0.0;

    for(int i = 0; i < octaves; i++) {
        value += amp * noise(freq * vec2(uv.x, uv.y + time));
        amp *= 0.5;
        freq *= 2.0;
    }
    return value;
}

vec4 difference(vec4 base, vec4 blend){
    return abs(base - blend);
}

vec4 bolt(vec2 uv, float time, float i)
{
    // Setup the beam locking to the edges.
    float falloff = smoothstep(0.0, fixed_edge_size, uv.x) * smoothstep(0.0, fixed_edge_size, 1.0 - uv.x);

    // Use Fractal Brownian Motion to create a \"cloud texture\" and use Difference blend mode to make the beam
    vec4 clouds = vec4(fbm((uv + vec2(i)) * noise_scale, time * speed)) * falloff;
    vec4 diff_clouds = difference(clouds, vec4(uv.y - 0.5 + y_offset + (uv.y * falloff * 0.02 * energy * progress)));

    // Create a new noise to mask the beams on low \"progress\" values. To make a \"turn-off\" effect more visually interesting.
    vec4 clouds2 = vec4(fbm((uv * 2.0) * noise_scale, time * 1.0)) * 5.0;
    diff_clouds += smoothstep(0.0, 0.8, clouds2) * 0.1 * (1.0 - progress);

    // Set thickness of the beams with scaling
    float thickness2 =  1.0 - (thickness * beam_size / (min(i + beam_difference, 1.0) + (1.0 - beam_difference))) * progress;
    vec4 beam = clamp(smoothstep(thickness2, thickness2 + 0.005 * progress, 1.0 - diff_clouds), vec4(0.0), vec4(1.0));

    // Set the beam outlines with scaling
    vec4 beam_outline;
    float outline = thickness2 - (outline_thickness * outline_size * progress);
    beam_outline = clamp(smoothstep(outline, outline + 0.04, 1.0 - diff_clouds), 0.0, 1.0);
    beam_outline = clamp(beam_outline - beam, 0.0, 1.0);

    // Merge the beam and the outline and return to the fragment function
    return (beam * (color + vec4(glow, glow, glow, 0.0))) + (beam_outline * (outline_color + vec4(outline_glow, outline_glow, outline_glow, 0.0)));
}

void fragment()
{
    vec4 beam = vec4(0.0);

    for (int i = 0; i < beams; i++) {
        beam = max(beam, bolt(UV, TIME, float(i)));
    }

    COLOR = vec4(beam.x, beam.y, beam.z, beam.w);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_x64ik"]
shader = SubResource("Shader_ajna5")
shader_parameter/beams = 2
shader_parameter/energy = 4.0
shader_parameter/roughness = 3
shader_parameter/frequency = 10
shader_parameter/speed = 1.0
shader_parameter/thickness = 0.003
shader_parameter/outline_thickness = 0.006
shader_parameter/beam_difference = 0.0
shader_parameter/glow = 0.0
shader_parameter/outline_glow = 0.0
shader_parameter/color = Color(0.939, 0.011, 0, 1)
shader_parameter/outline_color = Color(0.8, 0.008, 0, 1)
shader_parameter/progress = 1.0
shader_parameter/y_offset = 0.0
shader_parameter/fixed_edge_size = 0.05
shader_parameter/noise_scale = Vector2(1, 1)
shader_parameter/beam_size = 10.0
shader_parameter/outline_size = 10.0

[node name="Sniper" type="RigidBody2D" node_paths=PackedStringArray("LaserSocket", "HealthBar", "PoisonedComponent", "AnimatedSprite", "AnimationPlayer", "AnimationTree", "CollisionShape", "NavigationAgent", "FSM", "HealthComponent", "StaminaComponent", "MoveComponent", "DamageEffectComponent")]
z_index = 100
y_sort_enabled = true
collision_layer = 5
collision_mask = 11
gravity_scale = 0.0
lock_rotation = true
script = ExtResource("1_liq5q")
LaserSocket = NodePath("Sockets/Laser")
HealthBar = NodePath("HealthBar")
PoisonedComponent = NodePath("Components/PoisonedComponent")
AnimatedSprite = NodePath("AnimatedSprite2D")
AnimationPlayer = NodePath("AnimatedSprite2D/AnimationPlayer")
AnimationTree = NodePath("AnimatedSprite2D/AnimationPlayer/AnimationTree")
CollisionShape = NodePath("CollisionShape2D")
NavigationAgent = NodePath("NavigationAgent2D")
FSM = NodePath("FSM")
HealthComponent = NodePath("Components/HealthComponent")
StaminaComponent = NodePath("Components/StaminaComponent")
MoveComponent = NodePath("Components/MoveComponent")
DamageEffectComponent = NodePath("Components/DamageEffectComponent")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.5, 0.5)
sprite_frames = ExtResource("2_ff0ex")
animation = &"Idle_Forward"
offset = Vector2(0, -496)

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimatedSprite2D"]
active = false
libraries = {
&"": SubResource("AnimationLibrary_cexvk")
}
playback_auto_capture = false

[node name="AnimationTree" type="AnimationTree" parent="AnimatedSprite2D/AnimationPlayer"]
active = false
deterministic = false
root_node = NodePath("../..")
tree_root = SubResource("AnimationNodeBlendTree_v1d6s")
anim_player = NodePath("..")
parameters/AttackBlendSpace2D/blend_position = Vector2(0, 0)
parameters/IdleBlendSpace2D/blend_position = Vector2(0, 0)
parameters/RunBlendSpace2D/blend_position = Vector2(0, 0)
parameters/Transition/current_state = "Run"
parameters/Transition/transition_request = "Attack"
parameters/Transition/current_index = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -14)
rotation = 1.5708
shape = SubResource("CapsuleShape2D_pjytc")

[node name="ShadowSprite2D" type="Sprite2D" parent="."]
visible = false
position = Vector2(0, -11)
scale = Vector2(1.2, 1.61)
texture = ExtResource("2_liq5q")

[node name="AttackBodies" type="Node2D" parent="."]

[node name="AllAttackBody" type="StaticBody2D" parent="AttackBodies" node_paths=PackedStringArray("Root")]
collision_layer = 128
collision_mask = 128
script = ExtResource("4_4u3ef")
Root = NodePath("../..")
Type = "All"

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackBodies/AllAttackBody"]
position = Vector2(-2, -244.5)
shape = SubResource("RectangleShape2D_s727y")

[node name="HealthBar" type="ProgressBar" parent="."]
visible = false
z_index = 100
offset_left = -123.0
offset_top = -530.0
offset_right = 77.0
offset_bottom = -495.0
theme_override_font_sizes/font_size = 25
theme_override_styles/background = SubResource("StyleBoxFlat_qd8sp")
theme_override_styles/fill = SubResource("StyleBoxFlat_1inls")
value = 50.0
show_percentage = false
metadata/_edit_use_anchors_ = true

[node name="FSM" type="Node2D" parent="." node_paths=PackedStringArray("Root", "States")]
script = ExtResource("3_o4tih")
Root = NodePath("..")
States = [NodePath("AttackState"), NodePath("IdleState"), NodePath("RunState"), NodePath("WalkState")]

[node name="AttackState" type="Node2D" parent="FSM" node_paths=PackedStringArray("AttackTimer", "Laser")]
script = ExtResource("4_23e6g")
AttackTimer = NodePath("AttackTimer")
Projectile = ExtResource("5_x64ik")
Laser = NodePath("Laser")

[node name="AttackTimer" type="Timer" parent="FSM/AttackState"]
wait_time = 0.467
one_shot = true

[node name="Laser" type="Line2D" parent="FSM/AttackState"]
z_index = 100
material = SubResource("ShaderMaterial_x64ik")
width = 60.0
texture_mode = 2

[node name="IdleState" type="Node2D" parent="FSM"]
script = ExtResource("6_shlsv")

[node name="RunState" type="Node2D" parent="FSM"]
script = ExtResource("7_1v0w7")

[node name="WalkState" type="Node2D" parent="FSM"]
script = ExtResource("9_onvok")

[node name="Components" type="Node2D" parent="."]

[node name="HealthComponent" type="Node2D" parent="Components"]
script = ExtResource("10_3h5gv")
metadata/_custom_type_script = "uid://dsh8aw5whuisj"

[node name="StaminaComponent" type="Node2D" parent="Components"]
position = Vector2(-1, 16)
script = ExtResource("11_wr6qg")
metadata/_custom_type_script = "uid://woks1icbeguk"

[node name="MoveComponent" type="Node2D" parent="Components"]
script = ExtResource("15_x64ik")

[node name="PoisonedComponent" type="Node2D" parent="Components"]
script = ExtResource("14_x64ik")

[node name="DamageEffectComponent" type="Node2D" parent="Components" node_paths=PackedStringArray("Sprite", "Timer")]
position = Vector2(-16, -87)
script = ExtResource("17_3busw")
Sprite = NodePath("Sprite2D")
Timer = NodePath("EffectTimer")

[node name="Sprite2D" type="Sprite2D" parent="Components/DamageEffectComponent"]
position = Vector2(8, -328)
texture = ExtResource("18_2iuk7")

[node name="EffectTimer" type="Timer" parent="Components/DamageEffectComponent"]
wait_time = 0.2
one_shot = true

[node name="Sockets" type="Node2D" parent="."]

[node name="Laser" type="Node2D" parent="Sockets"]
position = Vector2(-74, -77)

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="."]
target_position = Vector2(1332.66, 1232.31)
velocity = Vector2(3.651e-06, -1)
